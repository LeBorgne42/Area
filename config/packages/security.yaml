security:
    encoders:
        App\Entity\User: bcrypt
        App\Entity\Admin:
            algorithm: plaintext
        Symfony\Component\Security\Core\User\User: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        chain_provider:
            chain:
                providers: [my_in_memory_provider, my_entity_user_provider, my_entity_admin_provider]
        my_in_memory_provider:
            memory:
                users:
                    admin:
                        password: $2y$13$P9SnnB/2cS.n47uBArwpfuL0XP8jJc21wGGSoNzC.dWvTmEiQI.Ke
                        roles: [ROLE_ADMIN]
        my_entity_user_provider:
            entity: { class: App\Entity\User}
        my_entity_admin_provider:
            entity: { class: App\Entity\Admin }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/plop
            provider: chain_provider
            anonymous: ~
            form_login:
                login_path: login
                check_path: login
                remember_me: true
                default_target_path: login_redirect
                always_use_default_target_path: true
            logout:
                path: logout
                target: home
                invalidate_session: true

            # activate different ways to authenticate
            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate
            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/media, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/plop, roles: ROLE_USER }
        - { path: ^/admin-edr, roles: ROLE_ADMIN }
